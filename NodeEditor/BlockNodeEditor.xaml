<UserControl x:Class="NodeEditor.BlockNodeEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NodeEditor"
			xmlns:nec="clr-namespace:NodeEditor.Components"
			xmlns:logic="clr-namespace:NodeEditor.Components.Logic"
			mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>

		<ContextMenu x:Key="AddBlock_CM">
			<MenuItem Header="Conditionals">
				<MenuItem Header="Less Than" Click="ConditonalsLT_MI_Click"> 
				</MenuItem>
				<MenuItem Header="Less Equal" Click="ConditonalsLE_MI_Click">
				</MenuItem>
				<MenuItem Header="Greater Than" Click="ConditonalsGT_MI_Click">
				</MenuItem>
				<MenuItem Header="Greater Equal" Click="ConditonalsGE_MI_Click">
				</MenuItem>
				<MenuItem Header="Equals">
					<MenuItem Header="Bool" Click="ConditonalsEq_MI_Click"/>
					<MenuItem Header="Int" Click="ConditonalsEq_MI_Click"/>
				</MenuItem>
				<MenuItem Header="Not Equals">
					<MenuItem Header="Bool" Click="ConditonalsNEq_MI_Click"/>
					<MenuItem Header="Int" Click="ConditonalsNEq_MI_Click"/>
				</MenuItem>
			</MenuItem>
			<MenuItem Header="Logic" >
				<MenuItem Header="AND" Click="LogicAND_MI_Click"/>
				<MenuItem Header="OR" Click="LogicAND_MI_Click"/>
				<MenuItem Header="NOT" Click="LogicAND_MI_Click"/>
			</MenuItem>
			<MenuItem Header="Math">
				<MenuItem Header="Add" Click="Math_MI_Click"/>
				<MenuItem Header="Subtract" Click="Math_MI_Click"/>
				<MenuItem Header="Divide" Click="Math_MI_Click"/>
				<MenuItem Header="Multiply" Click="Math_MI_Click"/>
				<MenuItem Header="Mod" Click="Math_MI_Click"/>
			</MenuItem>
			<Separator/>
			<MenuItem Header="Dialogue" Name="Dialogue_MI"/>
			<MenuItem Header="Dialogue Choice" Name="DialogueChoice_MI"/>
			<Separator/>
			<MenuItem Header="Get Constant" Name="GetConstant_MI">
				
			</MenuItem>
			<MenuItem Header="Set Constant" Name="SetConstant_MI">
				
			</MenuItem>
			<Separator/>
			<MenuItem Header="Exit Block" Name="End_MI" Click="ExitBlock_MI_Click">

			</MenuItem>

		</ContextMenu>
		
		<ContextMenu x:Key="DeleteBaseNode_CM">
			<MenuItem x:Name="DeleteBN_MI" IsChecked="False" Header="Delete Node" PreviewMouseLeftButtonDown="DeleteBaseNode_Click">
			</MenuItem>
		</ContextMenu>

		<ContextMenu x:Key="DeleteConnections_CM">
			<MenuItem x:Name="DeleteConnections_MI" IsChecked="False" Header="Delete All" PreviewMouseLeftButtonDown="DeleteConnections_Click">
			</MenuItem>
			<Separator/>
		</ContextMenu>

		<Style TargetType="{x:Type logic:ANDBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2" >
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
											<Setter Property="BorderBrush" Value="#FF494949"></Setter>
										</DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                                            <Setter Property="BorderBrush" Value="White"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                                            <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Logical AND" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="In 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:ORBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2" >
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                                            <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                                            <Setter Property="BorderBrush" Value="White"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                                            <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Logical OR" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="In 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:NOTBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2" >
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                          <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                          <Setter Property="BorderBrush" Value="White"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                          <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                      </DataTrigger>
                  </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Logical NOT" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="0" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		
		<Style TargetType="{x:Type nec:AddBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
		                <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
		                    <Setter Property="BorderBrush" Value="#FF494949"></Setter>
		                </DataTrigger>
		                <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
		                    <Setter Property="BorderBrush" Value="White"></Setter>
		                </DataTrigger>
		                <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
		                    <Setter Property="BorderBrush" Value="DarkRed"></Setter>
		                </DataTrigger>
		            </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Integer ADD" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="In 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:SubtractBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                                            <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                                            <Setter Property="BorderBrush" Value="White"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                                            <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Integer SUBTRACT" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="In 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:MultiplyBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
	                  <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
	                      <Setter Property="BorderBrush" Value="#FF494949"></Setter>
	                  </DataTrigger>
	                  <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
	                      <Setter Property="BorderBrush" Value="White"></Setter>
	                  </DataTrigger>
	                  <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
	                      <Setter Property="BorderBrush" Value="DarkRed"></Setter>
	                  </DataTrigger>
	              </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Integer MULTIPLY" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="In 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:DivisionBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                          <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                          <Setter Property="BorderBrush" Value="White"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                          <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                      </DataTrigger>
                  </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Integer DIVIDE" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="In 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:ModuloBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                          <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                          <Setter Property="BorderBrush" Value="White"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                          <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                      </DataTrigger>
                  </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Integer MOD" Background="#FF252525"/>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="In 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="In 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		
		<Style TargetType="{x:Type local:ExitBlockNode}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Disabled}">
                                            <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Active}">
                                            <Setter Property="BorderBrush" Value="White"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Error}">
                                            <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Done}">
                                            <Setter Property="BorderBrush" Value="Green"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="75" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="20"/>
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0" Foreground="White" Text="End Node" Background="#FF252525"/>


								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<!--Entry node-->
								<TextBlock Grid.Row="1" Text="In" TextWrapping="Wrap" Foreground="White" Margin="15,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
								<ContentPresenter HorizontalAlignment="Left" Grid.Row="1" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightIndicator">
									<ContentPresenter.Content>
										<Grid x:Name="EntryNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" >
											<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,0,0,0" Cursor="Hand" Fill="White">
											</Ellipse>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type local:StartBlockNode}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Disabled}">
                                            <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Active}">
                                            <Setter Property="BorderBrush" Value="White"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Error}">
                                            <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="75" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="20"/>
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0" Foreground="White" Text="Start Node" Background="#FF252525"/>
								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<!--Exit node-->
								<TextBlock Grid.Row="1" Text="Out" TextWrapping="Wrap" Foreground="White" Margin="0,0,15,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
								<ContentPresenter HorizontalAlignment="Right" Grid.Row="1" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightIndicator">
									<ContentPresenter.Content>
										<Grid x:Name="Exit_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
											<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand" Fill="White">
											</Ellipse>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		
		
		<Style TargetType="{x:Type nec:GetConstantNodeBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
	                    <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
	                        <Setter Property="BorderBrush" Value="#FF494949"></Setter>
	                    </DataTrigger>
	                    <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
	                        <Setter Property="BorderBrush" Value="White"></Setter>
	                    </DataTrigger>
	                    <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
	                        <Setter Property="BorderBrush" Value="DarkRed"></Setter>
	                    </DataTrigger>
	                </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="100" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="40"/>
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0" Foreground="White" Text="Get Constant" Background="#FF252525"/>


								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<!--output node-->
								<TextBlock Grid.Row="1" Text="{Binding Path=VarHeader, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" TextWrapping="Wrap" Foreground="White" Margin="0,0,15,0" HorizontalAlignment="Right" VerticalAlignment="Center"/>
								<ContentPresenter HorizontalAlignment="Right" Grid.Row="1" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightIndicator">
									<ContentPresenter.Content>
										<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
											<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
												<Ellipse.Style>
													<Style TargetType="Ellipse">
														<Style.Triggers>
															<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																<Setter Property="Fill" Value="BlueViolet"></Setter>
															</DataTrigger>
															<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																<Setter Property="Fill" Value="PaleVioletRed"></Setter>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</Ellipse.Style>
											</Ellipse>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>

							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:SetConstantNodeBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                          <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                          <Setter Property="BorderBrush" Value="White"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                          <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                      </DataTrigger>
                  </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>


								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Set Constant" Background="#FF252525"/>

								<!--default Exit thumb-->
								
								<ContentPresenter HorizontalAlignment="Right" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightIndicator">
									<ContentPresenter.Content>
										<Grid x:Name="Exit_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
											<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Fill="White" Margin="0,0,-10,0" Cursor="Hand">
											</Ellipse>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>

								<!--enter node thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="0"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_EnterIndicator">
									<ContentPresenter.Content>
										<Grid x:Name="EntryNode_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"	>
											<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Fill="White" Margin="-10,-10,-10,-10" Cursor="Hand">
												<Ellipse.Clip>
													<RectangleGeometry Rect="0,0,10,20"/>
												</Ellipse.Clip>
											</Ellipse>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Width="40" Height="20" Margin="35,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Old" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="New" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Out" Foreground="White" Margin="25,5,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>
									
								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<Style TargetType="{x:Type nec:ConditionalNodeBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="1">
                          <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="0">
                          <Setter Property="BorderBrush" Value="White"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="2">
                          <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                      </DataTrigger>
                  </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid Width="150" MinHeight="60" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click">
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="*"/>
								</Grid.RowDefinitions>
								<!--label-->
								<TextBlock Grid.Row="0" Grid.Column="1" Foreground="White" Text="Conditional Execution" Background="#FF252525"/>
								<!--enter node thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="0"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_EnterIndicator">
									<ContentPresenter.Content>
										<Grid x:Name="EntryNode_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"	>
											<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Fill="White" Margin="-10,-10,-10,-10" Cursor="Hand">
												<Ellipse.Clip>
													<RectangleGeometry Rect="0,0,10,20"/>
												</Ellipse.Clip>
											</Ellipse>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>

								<Grid Grid.Row="1">
									<Grid.RowDefinitions>
										<RowDefinition Height="30"/>
										<RowDefinition Height="30"/>
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="10"/>
									</Grid.ColumnDefinitions>

									<TextBox Grid.Row="1" Grid.Column="1"  Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Width="40" Height="20" Margin="50,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<TextBox.Style>
											<Style TargetType="TextBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBox.Style>
									</TextBox>

									<ComboBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=NewValue_Constant, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay }" Width="40" Height="20" Margin="50,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" >
										<ComboBoxItem>
											<TextBlock Text="T"/>
										</ComboBoxItem>
										<ComboBoxItem>
											<TextBlock Text="F"/>
										</ComboBoxItem>
										<ComboBox.Style>
											<Style TargetType="ComboBox">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="False">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
														<Setter Property="Visibility" Value="Visible"></Setter>
													</DataTrigger>
													<DataTrigger Binding="{Binding Path=NewValConnected, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="True">
														<Setter Property="Visibility" Value="Hidden"></Setter>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</ComboBox.Style>
									</ComboBox>


									<!--old value input thumb-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="Cond 1" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="0" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
										<ContentPresenter.Content>
											<Grid Grid.Row="0" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"  PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--New value input thumb-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="Cond 2" Foreground="White" Margin="10,5,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Stretch" Grid.Row="1" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              >
										<ContentPresenter.Content>
											<Grid Grid.Row="1" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove" PreviewMouseRightButtonDown="COnnectionNode_RightClick">
												<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Margin="-10,-10,-10,-10" Cursor="Hand">
													<Ellipse.Clip>
														<RectangleGeometry Rect="10,0,10,20"/>
													</Ellipse.Clip>
													<Ellipse.Style>
														<Style TargetType="Ellipse">
															<Style.Triggers>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="3">
																	<Setter Property="Fill" Value="BlueViolet"></Setter>
																</DataTrigger>
																<DataTrigger Binding="{Binding Path=DType, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Value="4">
																	<Setter Property="Fill" Value="PaleVioletRed"></Setter>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Ellipse.Style>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data True output node-->
									<TextBlock Grid.Row="0" Grid.Column="1" Text="True" Foreground="White" Margin="25,5,5,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="0" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightDataIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand" Fill="White">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--Data False Output node-->
									<TextBlock Grid.Row="1" Grid.Column="1" Text="False" Foreground="White" Margin="25,5,5,0" HorizontalAlignment="Right" VerticalAlignment="Top" IsHitTestVisible="False"/>
									<ContentPresenter HorizontalAlignment="Right" Grid.Row="1" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False">
										<ContentPresenter.Content>
											<Grid x:Name="FalseOutput_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Margin="0,0,-10,0" Cursor="Hand" Fill="White">
													<Ellipse.Clip>
														<RectangleGeometry Rect="0,0,10,20"/>
													</Ellipse.Clip>
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>

								</Grid>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type nec:DialogueNodeBlock}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type nec:DialogueNodeBlock}">
						<Border Name="MainBorder"  CornerRadius="5" Background="#FF494949" BorderThickness="2">
							<Border.Style>
								<Style TargetType="Border">
									<Style.Triggers>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Disabled}">
                          <Setter Property="BorderBrush" Value="#FF494949"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Active}">
                          <Setter Property="BorderBrush" Value="White"></Setter>
                      </DataTrigger>
                      <DataTrigger Binding="{Binding Path=ActiveStatus, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Value="{x:Static nec:EActiveStatus.Error}">
                          <Setter Property="BorderBrush" Value="DarkRed"></Setter>
                      </DataTrigger>
                  </Style.Triggers>
								</Style>
							</Border.Style>
							<Grid MinHeight="100" MinWidth="150" MaxWidth="150" Background="#FF494949" ClipToBounds="False" PreviewMouseRightButtonDown="BaseNodeRight_BTN_Click" >
								<Grid.RowDefinitions>
									<RowDefinition Height="20"/>
									<RowDefinition Height="Auto"/>
									<RowDefinition Height="*"/>
									<RowDefinition Height="20"/>
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0" Foreground="White" Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}" Background="#FF252525"/>

								<!--enter node thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.Column="0"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_EnterIndicator">
									<ContentPresenter.Content>
										<Grid x:Name="EntryNode_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove">
											<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Fill="White" Margin="-10,-10,-10,-10" Cursor="Hand">
												<Ellipse.Clip>
													<RectangleGeometry Rect="0,0,10,20"/>
												</Ellipse.Clip>
											</Ellipse>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>

								<!--Drag thumb-->
								<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="3"
                                              VerticalAlignment="Stretch"
                                              x:Name="PART_MiddleIndicator">
									<ContentPresenter.Content>
										<Thumb x:Name="MoveThumb_Middle" Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" />
									</ContentPresenter.Content>
								</ContentPresenter>
								<!--Dialogue choices grid (output)-->
								<Grid x:Name="DialogueInput_Grid" Grid.Row="1" >
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="20"/>
										<ColumnDefinition Width="Auto"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>
								</Grid>

								<!--Dialogue choices grid (output)-->
								<Grid Grid.Row="2" IsHitTestVisible="True" x:Name="DialogueOutput_Grid">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="1"/>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="20"/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="40"/>
									</Grid.RowDefinitions>

									<TextBlock Grid.Column="1" Foreground="White" Margin="5" MaxWidth="150" TextWrapping="Wrap" Text="{Binding Path=DialogueTextOptions[0], RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
									<GridSplitter ResizeDirection="Rows" Height="2" Background="White" Grid.Row="1" IsEnabled="False"/>
									<!--default input thumb-->
									<!--<ContentPresenter HorizontalAlignment="Stretch" Grid.Column="0" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_LeftIndicator">
									<ContentPresenter.Content>
										<Grid>
											<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="20" Width="20" Fill="Blue" Margin="-10,-10,-10,-10" Cursor="Hand">
											</Ellipse>
											<Thumb x:Name="InNode1" HorizontalAlignment="Left" VerticalAlignment="Center" Height="15" Width="15"
													 Margin="-10,-10,-10,-10" Cursor="Hand" Background="Transparent" Opacity="0"
													PreviewMouseLeftButtonUp="MoveThumb_Left_MouseLeftButtonUp" PreviewMouseMove="MoveThumb_Left_PreviewMouseMove"	
														 PreviewDragEnter="MoveThumb_Left_PreviewDragEnter"	/>
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>-->


									<!--Drag thumb-->
									<ContentPresenter HorizontalAlignment="Stretch" Grid.ColumnSpan="5" Grid.RowSpan="100000"
                                              VerticalAlignment="Stretch"
                                              >
										<ContentPresenter.Content>
											<Thumb Cursor="ScrollAll" Background="Transparent" Opacity="0"
										 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
										 Margin="0,0,5,0" DragDelta="MoveThumb_Middle_DragDelta" PreviewMouseLeftButtonDown="ChangeUISelectedNode"/>
										</ContentPresenter.Content>
									</ContentPresenter>

									<!--default output thumb-->
									<ContentPresenter HorizontalAlignment="Right" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightIndicator">
										<ContentPresenter.Content>
											<Grid x:Name="OutNode1_Grid" PreviewMouseRightButtonDown="COnnectionNode_RightClick" PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
												<Ellipse HorizontalAlignment="Right" VerticalAlignment="Center" Height="20" Width="20" Fill="White" Margin="0,0,-10,0" Cursor="Hand">
												</Ellipse>
											</Grid>
										</ContentPresenter.Content>
									</ContentPresenter>
								</Grid>
								<Button Name="AddInputNode_BTN" Grid.Row="3" Content="+" Width="15" Height="15" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" Click="AddDialogueInput_BTN_Click" >
									<Button.Style>
										<Style TargetType="Button">
											<Style.Triggers>
												<DataTrigger Binding="{Binding Path=bChoice, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False">
													<Setter Property="Visibility" Value="Hidden"></Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding Path=bChoice, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="True">
													<Setter Property="Visibility" Value="Visible"></Setter>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Button.Style>
								</Button>
								<Button Name="AddOutputNode_BTN" Grid.Row="3" Content="+" Width="15" Height="15" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalAlignment="Center" HorizontalContentAlignment="Left" VerticalContentAlignment="Top" Click="AddDialogueOutput_BTN_Click">
									<Button.Style>
										<Style TargetType="Button">
											<Style.Triggers>
												<DataTrigger Binding="{Binding Path=bChoice, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="False">
													<Setter Property="Visibility" Value="Hidden"></Setter>
												</DataTrigger>
												<DataTrigger Binding="{Binding Path=bChoice, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Value="True">
													<Setter Property="Visibility" Value="Visible"></Setter>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Button.Style>
								</Button>
							</Grid>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>



		<ContentControl x:Key="OutputNode" x:Shared="False">
			<ContentPresenter HorizontalAlignment="Right" Grid.Column="2" IsHitTestVisible="True"
                                              VerticalAlignment="Stretch" ClipToBounds="False"
                                              x:Name="PART_RightIndicator">
				<ContentPresenter.Content>
					<Grid PreviewMouseLeftButtonDown="MoveThumb_Right_MouseLeftButtonDown">
						<Ellipse HorizontalAlignment="Left" VerticalAlignment="Center" Height="15" Width="15" Fill="Red" Margin="-10,-10,-10,-10" Cursor="Hand">
						</Ellipse>
					</Grid>
				</ContentPresenter.Content>
			</ContentPresenter>
		</ContentControl>


	</UserControl.Resources>
	<Grid Background="#FF1D1D1D">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="200"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>

		<!--Tester Vars-->
		<Grid Grid.Column="0">
			<Grid.RowDefinitions>
				<RowDefinition Height="20"/>
				<RowDefinition Height="20"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<TextBlock Text="Testing Vars:" Foreground="White" VerticalAlignment="Top"/>
			<GridSplitter Height="2" ResizeDirection="Columns" IsEnabled="False" Margin="0,20,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
			<!--<Line X1="0" X2="100" Y1="15" Y2="15" Fill="White" Stroke="White"/>-->

			<TextBlock Grid.Row="0" Text="Add Variable" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,2,29,2"/>
			<Button x:Name="AddTestingVar_BTN" Content="+" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="1" Width="20" Margin="0,0,5,0" HorizontalAlignment="Right" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Click="AddRuntimeVar_BTN_Click" />

			<TextBlock Grid.Row="1" Text="Choice Var" Foreground="White" HorizontalAlignment="Left"/>
			<TextBox Grid.Row="1" Height="20" Width="88" Text="GameBinding" HorizontalAlignment="Left" VerticalAlignment="Top" IsEnabled="False" Margin="62,0,0,0"/>
			<ComboBox Grid.Row="1" Height="20" Width="50" HorizontalAlignment="Right" VerticalAlignment="Top" >
				<ComboBoxItem>
					<TextBlock Text="Bool"/>
				</ComboBoxItem>
				<ComboBoxItem>
					<TextBlock Text="Int"/>
				</ComboBoxItem>
			</ComboBox>

			<ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
				<Grid x:Name="TestingVar_Grid">

					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="50"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
					</Grid.RowDefinitions>

				</Grid>
			</ScrollViewer>

		</Grid>

		<!-- Node editor -->
		<Grid Grid.Column="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="20"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>


			<!--Task bar-->
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition/>
					<ColumnDefinition Width="Auto" MinWidth="44"/>
					<ColumnDefinition Width="Auto" MinWidth="292"/>
				</Grid.ColumnDefinitions>

				<Menu DockPanel.Dock="Top" Grid.Column="0" Background="Transparent" Foreground="White" VerticalAlignment="Top"  Height="18">
					<MenuItem Header="" Foreground="White">
					</MenuItem>
				</Menu>
				<Menu DockPanel.Dock="Top" Grid.Column="1" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem x:Name="StartBlockExecution_MI" Header="Reset" Click="StartBlockExecution_MI_Click"/>
				</Menu>
				<Menu DockPanel.Dock="Top" Grid.Column="2" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem  Header="|" IsEnabled="False"/>
				</Menu>
				<Menu DockPanel.Dock="Top" Grid.Column="3" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem x:Name="RunOnStart_MI" Header="Enter" Click="RunOnStart_MI_Click" />
				</Menu>
				<Menu DockPanel.Dock="Top" Grid.Column="4" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem x:Name="ExecuteBlock_MI" Header="Execute" Click="ExecuteBlock_MI_Click" />
				</Menu>
				<Menu DockPanel.Dock="Top" Grid.Column="5" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem x:Name="RunOnExit_MI" Header="Exit" Click="RunOnExit_MI_Click" />
				</Menu>
				
				<Menu DockPanel.Dock="Top" Grid.Column="6" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem  Header="|" IsEnabled="False"/>
				</Menu>

				<Menu DockPanel.Dock="Top" Grid.Column="7" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem  Header="Start" Click="EvalOnStart_MI_Click"/>
				</Menu>
				<Menu DockPanel.Dock="Top" Grid.Column="8" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem  Header="Evaluate" Click="EvalBlock_MI_Click"/>
				</Menu>
				<Menu DockPanel.Dock="Top" Grid.Column="9" Background="Transparent" Foreground="White" VerticalAlignment="Center" Height="18" >
					<MenuItem  Header="Exit" Click="EvalOnExit_MI_Click"/>
				</Menu>

			</Grid>

			<!--MouseWheel="LevelEditor_Canvas_MouseWheel" SizeChanged="LevelEditor_BackCanvas_SizeChanged"-->
			<Canvas Grid.Row="1" x:Name="NodeEditor_BackCanvas" IsHitTestVisible="True" Grid.Column="1" MouseWheel="LevelEditor_Canvas_MouseWheel"
										ClipToBounds="True" MouseMove="LevelEditor_BackCanvas_MouseMove" Visibility="Visible" MouseRightButtonDown="NodeEditor_BackCanvas_PreviewMouseRightButtonDown">
				<!--<Canvas.RenderTransform>
					<ScaleTransform ScaleX=".5" ScaleY=".5" />
				</Canvas.RenderTransform>-->
				<Canvas.Background>
					<VisualBrush x:Name="Canvas_grid" TileMode="Tile" Stretch="Uniform" Viewport="0,0,20,20" ViewportUnits="Absolute" >
						<VisualBrush.Visual>
							<Rectangle Width="20" Height="20" Fill="Black" Stroke="Gray" StrokeThickness=".4" />
						</VisualBrush.Visual>
					</VisualBrush>
				</Canvas.Background>
				<Canvas x:Name="NodeEditor_Canvas" Background="Transparent" 
							HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >

				</Canvas>
			</Canvas>
		</Grid>

		<GridSplitter ResizeDirection="Columns" Grid.Column="0" Width="2" Background="White"/>
	</Grid>
</UserControl>
